name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  ETHUI_TEST_MODE: 1

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        # Future: add macOS and Windows
        # os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: |
          bin -> target
          
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libwebkit2gtk-4.1-dev \
          libgtk-3-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libssl-dev \
          libsoup2.4-dev \
          libjavascriptcoregtk-4.1-dev \
          libgtk-3-dev \
          libsoup-3.0-dev \
          libjavascriptcoregtk-4.1-dev \
          libwebkit2gtk-4.1-dev \
          xvfb \
          wget \
          unzip
          
    - name: Install Chrome and ChromeDriver
      run: |
        # Install Chrome
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # Install ChromeDriver
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
        CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%%.*}")
        wget -O /tmp/chromedriver.zip "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip"
        sudo unzip /tmp/chromedriver.zip -d /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        
    - name: Install tauri-driver
      run: |
        cargo install --git https://github.com/tauri-apps/tauri-driver
        
    - name: Install frontend dependencies
      run: pnpm install
      
    - name: Build frontend
      run: pnpm --filter @ethui/gui build
      
    - name: Create test directories
      run: |
        mkdir -p test-data
        mkdir -p screenshots
        
    - name: Start Xvfb (Virtual Display)
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 &
        echo "DISPLAY=:99" >> $GITHUB_ENV
        
    - name: Run integration tests
      run: |
        export ETHUI_CONFIG_DIR="./test-data"
        export TAURI_CONFIG="tauri.test.conf.json"
        
        # Start tauri-driver in background
        tauri-driver &
        DRIVER_PID=$!
        
        # Wait for driver to start
        sleep 5
        
        # Run the tests
        cd bin && cargo test --test integration_test -- --nocapture
        
        # Cleanup
        kill $DRIVER_PID || true
        
    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-screenshots-${{ matrix.os }}
        path: screenshots/
        retention-days: 7
        
    - name: Upload test logs on failure  
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-logs-${{ matrix.os }}
        path: |
          test-data/
          *.log
        retention-days: 7