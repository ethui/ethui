name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}

jobs:
  #
  # build extension
  #
  extension:
    name: Build Extension
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"

      - run: npm install -g yarn

      - name: Install dependencies
        run: yarn workspace @iron/extension install

      - name: Build extension zip
        run: yarn workspace @iron/extension build:zip

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: extension-${{ github.sha }}
          path: ./extension/extension.zip
          retention-days: 1

  #
  # build tauri app
  #
  app:
    name: Build Binary
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    outputs:
      artifacts: ${{ steps.tauri.artifactPaths }}
    steps:
      - uses: actions/checkout@v3

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"

      - run: npm install -g yarn

      - name: install frontend dependencies
        run: yarn install

      - uses: tauri-apps/tauri-action@v0
        id: tauri
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #
  # create release
  #
  create-release:
    needs: [extension, app]
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download extension
        uses: actions/download-artifact@v3
        with:
          name: extension-${{ github.sha }}
          path: release/

      - name: Download binary
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.app.outputs.artifacts }}
          path: release/

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: true
          files: |
            release/*
