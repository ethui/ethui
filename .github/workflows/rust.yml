name: rust

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  skip:
    runs-on: ubuntu-latest
    outputs:
      skip-rust: ${{ steps.skip_rust.outputs.src }}
      skip-lock: ${{ steps.skip_lock.outputs.src }}
    steps:
      - uses: dorny/paths-filter@v3
        id: skip_rust
        with:
          filters: |
            src:
              - ".github/workflows/rust.yml"
              - "bin/**"
              - "migrations/**"
              - "crates/**"
              - "sqlx/**"
              - "Cargo.toml"
              - "Cargo.lock"
              - "deny.toml"
              - "rustfmt.toml"
              - "rust-toolchain.toml"

      - uses: dorny/paths-filter@v3
        id: skip_lock
        with:
          filters: |
            src:
              - ".github/workflows/rust.yml"
              - "Cargo.toml"
              - "**/Cargo.toml"
              - "Cargo.lock"
              - "deny.toml"

  cargo-test:
    needs: skip
    if: ${{ needs.skip-rust.outputs.skip == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl wget file libssl-dev libayatana-appindicator3-dev librsvg2-dev libwebkit2gtk-4.1-dev libjavascriptcoregtk-4.1 libsoup-3.0-dev patchelf libsodium-dev

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "debug"
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - run: cargo nextest run --workspace

  cargo-clippy:
    needs: skip
    if: ${{ needs.skip-rust.outputs.skip == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl wget file libssl-dev libayatana-appindicator3-dev librsvg2-dev libwebkit2gtk-4.1-dev libjavascriptcoregtk-4.1 libsoup-3.0-dev patchelf libsodium-dev

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "debug"
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - run: cargo check
      - run: cargo clippy --all -- -D clippy::all -D clippy::dbg_macro

      - uses: taiki-e/install-action@v2
        with:
          tool: sqlx-cli
      - run: cargo sqlx prepare --workspace --check

  cargo-deny:
    needs: skip
    if: ${{ needs.skip-lock.outputs.skip == 'false' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    name: cargo-deny (${{ matrix.checks }})

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
      - uses: actions/checkout@v4

      # check if cargo.lock changed
      # only needed in advisories
      - uses: dorny/paths-filter@v2
        id: lock
        with:
          filters: |
            src:
              - '**/Cargo.lock'
        if: ${{ matrix.checks == 'advisories' }}

      - uses: EmbarkStudios/cargo-deny-action@v2.0.1
        with:
          command: check ${{ matrix.checks }}
        # conditionally run advisories only if lock changed
        if: ${{ matrix.checks != 'advisories' || steps.lock.outputs.src == 'true' }}
